{"ast":null,"code":"var _jsxFileName = \"/home/juan/IdeaProjects/todoapp/front/todo/src/components/Todo.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { useAuth } from \"../security/AuthContext\";\nimport { retrieveTodoApi, updateTodoApi } from \"../api/TodoApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const authContext = useAuth();\n  const navigate = useNavigate();\n  const username = authContext.username;\n  const [description, setDescription] = useState(\"\");\n  const [targetDate, setTargetDate] = useState(\"\");\n  useEffect(() => retrieveTodo(), [id]);\n  function retrieveTodo() {\n    if (Ii != -1) {\n      retrieveTodoApi(username, id).then(response => {\n        setDescription(response.data.description);\n        setTargetDate(response.data.targetDate);\n      });\n    }\n  }\n  function onSubmit(values) {\n    console.log(values);\n    const todo = {\n      id: id,\n      username: username,\n      description: values.description,\n      targetDate: values.targetDate,\n      done: false\n    };\n    updateTodoApi(username, id, todo).then(() => {\n      navigate(\"/todos\");\n    });\n  }\n  function validate(values) {\n    let errors = {};\n    if (!values.description) {\n      errors.description = \"Enter a description\";\n    } else if (values.description.length < 5) {\n      errors.description = \"Enter at least 5 characters in description\";\n    }\n    if (!values.targetDate) {\n      errors.targetDate = \"Enter a target date\";\n    }\n    return errors;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Enter todo details \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          description,\n          targetDate\n        },\n        enableReinitialize: true,\n        onSubmit: onSubmit,\n        validate: validate,\n        validateOnChange: false,\n        validateOnBlur: false,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"description\",\n            component: \"div\",\n            className: \"alert alert-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"targetDate\",\n            component: \"div\",\n            className: \"alert alert-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Descriprion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Target Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"date\",\n              className: \"form-control\",\n              name: \"targetDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"Txu0rRdWNl++eCWt+Td+v1+Dhyk=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","ErrorMessage","Field","Form","Formik","useAuth","retrieveTodoApi","updateTodoApi","jsxDEV","_jsxDEV","Todo","_s","id","authContext","navigate","username","description","setDescription","targetDate","setTargetDate","retrieveTodo","Ii","then","response","data","onSubmit","values","console","log","todo","done","validate","errors","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","enableReinitialize","validateOnChange","validateOnBlur","props","name","component","type","_c","$RefreshReg$"],"sources":["/home/juan/IdeaProjects/todoapp/front/todo/src/components/Todo.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { useAuth } from \"../security/AuthContext\";\nimport { retrieveTodoApi, updateTodoApi } from \"../api/TodoApiService\";\n\nexport default function Todo() {\n\n    const {id} = useParams();\n    const authContext = useAuth();\n    const navigate = useNavigate();\n\n    const username = authContext.username;\n    const [description , setDescription] = useState(\"\");\n    const [targetDate, setTargetDate] = useState(\"\");\n\n\n    useEffect(\n        () => retrieveTodo(), [id]\n    )\n\n    function retrieveTodo(){\n        if (Ii != -1){\n            retrieveTodoApi(username, id)\n                .then((response) => {\n                    setDescription(response.data.description)\n                    setTargetDate(response.data.targetDate)\n                })\n        }\n    }\n\n    function onSubmit(values){\n        console.log(values);\n        const todo = {\n            id: id,\n            username: username,\n            description: values.description,\n            targetDate: values.targetDate,\n            done: false\n        }\n        updateTodoApi(username, id, todo)\n            .then(() => {\n                navigate(\"/todos\");\n            });\n    }\n\n    function validate(values){\n        let errors = {};\n        if(!values.description){\n            errors.description = \"Enter a description\";\n        } else if(values.description.length < 5){\n            errors.description = \"Enter at least 5 characters in description\";\n        }\n\n        if(!values.targetDate){\n            errors.targetDate = \"Enter a target date\";\n        }\n\n        return errors;\n    }\n\n    return (\n        <div className=\"container\">\n            <h1> Enter todo details </h1>\n            <div>\n                <Formik initialValues={ {description, targetDate}}\n                    enableReinitialize={true}\n                    onSubmit={onSubmit}\n                    validate={validate}\n                    validateOnChange={false}\n                    validateOnBlur={false}\n                    >\n                    {\n                        (props) => (\n                            <Form>\n                                <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\n                                <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"/>\n                                <fieldset className=\"form-group\">\n                                    <label>Descriprion</label>\n                                    <Field type=\"text\" className=\"form-control\" name=\"description\"/>\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <label>Target Date</label>\n                                    <Field type=\"date\" className=\"form-control\" name=\"targetDate\"/>\n                                </fieldset>\n                                <div>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button> \n                                </div>\n                            </Form>\n                        )\n                    }\n                </Formik>\n            </div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}